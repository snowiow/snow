- name: make sure fish is installed
  package:
    name:
      - awscli
      - golang-go
      - npm
    state: present
  become: yes

- name: Install gopls
  shell: go install golang.org/x/tools/gopls@latest
  
- name: Include version vars
  include_vars: "{{ playbook_dir }}/versions.yaml"
  
- name: create bin directory if not exists
  file:
    path: "{{ playbook_dir }}/bin"
    state: directory
    
- name: Download aws-vault
  shell:
    "curl -L -o bin/aws-vault https://github.com/99designs/aws-vault/releases/download/v{{ aws_vault }}/aws-vault-linux-amd64"

- name: Move aws-vault to bin
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/bin/aws-vault"
    dest: /usr/local/bin/aws-vault
    mode: 755
  become: yes

- name: Download terraform
  shell:
    "curl -L -o bin/terraform.zip https://releases.hashicorp.com/terraform/{{ terraform }}/terraform_{{ terraform }}_linux_amd64.zip"

- name: Move terraform to bin
  ansible.builtin.unarchive:
    src: "{{ playbook_dir }}/bin/terraform.zip"
    dest: /usr/local/bin
    remote_src: yes
  become: yes

- name: Download aws-sso
  shell:
    "curl -L -o bin/aws-sso https://github.com/synfinatic/aws-sso-cli/releases/download/v{{ aws_sso }}/aws-sso-{{ aws_sso }}-linux-amd64"

- name: Move aws-sso to bin
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/bin/aws-sso"
    dest: /usr/local/bin/aws-sso
    mode: 755
  become: yes

- name: Download aws-cfg-generator
  shell: "curl -L -o bin/aws-cfg-generator https://github.com/moia-oss/aws-cfg-generator/releases/download/v{{ aws_cfg_generator }}/linux-amd64-aws-cfg-generator"
    
- name: Move aws-cfg-generator to bin
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/bin/aws-cfg-generator"
    dest: /usr/local/bin/aws-cfg-generator
    mode: 755
  become: yes
  
- name: create helm download directory
  file:
    path: "{{ playbook_dir }}/bin/helm"
    state: directory

- name: Download Helm
  shell:
    "curl -L -o bin/helm/helm.tar.gz https://get.helm.sh/helm-v{{ helm }}-linux-amd64.tar.gz"
    
- name: Extract Helm
  ansible.builtin.unarchive:
    src: "{{ playbook_dir }}/bin/helm/helm.tar.gz"
    dest: "{{ playbook_dir }}/bin/helm"

- name: Copy helm to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/bin/helm/linux-amd64/helm"
    dest: /usr/local/bin/helm
    mode: 755
  become: yes
  
- name: Download Cue
  shell:
    "curl -L -o bin/cue.tar.gz https://github.com/cue-lang/cue/releases/download/v{{ cue }}/cue_v{{ cue }}_linux_amd64.tar.gz"
    
- name: Extract Cue
  ansible.builtin.unarchive:
    src: "{{ playbook_dir }}/bin/cue.tar.gz"
    dest: "{{ playbook_dir }}/bin"

- name: Copy cue to /usr/local/bin
  ansible.builtin.copy:
    src: "{{ playbook_dir }}/bin/cue"
    dest: /usr/local/bin/cue
    mode: 755
  become: yes
